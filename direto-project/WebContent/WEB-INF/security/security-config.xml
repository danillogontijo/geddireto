<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.0.xsd
	">

	<global-method-security pre-post-annotations="enabled"></global-method-security>

	<!--<http auto-config="true" use-expressions="true" entry-point-ref="forbiddenAuthEntryPoint">-->
	<http auto-config="true" use-expressions="true" access-decision-manager-ref="">
		<!--<access-denied-handler error-page="/accessDenied.html" />

		-->
		<intercept-url pattern="/favicon.ico" access="isAnonymous()" />
		<intercept-url pattern="/index.jsp" access="permitAll" />
		<intercept-url pattern="/login.html" access="permitAll" requires-channel="https" />
		<intercept-url pattern="/error.html" access="permitAll" />
		<intercept-url pattern="/dwr/*" access="permitAll" />
		<intercept-url pattern="/arquivos/*" access="permitAll" />
		<intercept-url pattern="/dwr/interface/*" access="permitAll" />
		<intercept-url pattern="/imagens/*" access="permitAll" />
		<intercept-url pattern="/css/*" access="permitAll" />
		<intercept-url pattern="/js/*" access="permitAll" />
		<intercept-url pattern="/upload/**" access="hasAnyRole ('ROLE_USER','ROLE_ADMIN') and fullyAuthenticated" />
		
		<!-- <intercept-url pattern="/j_spring_security_filter" access="permitAll" requires-channel="https" /> -->
		
		<!--
			<intercept-url pattern="/secure/**"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"
			requires-channel="https" />
		-->
		<intercept-url pattern="/*"	access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" requires-channel="https"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN') and fullyAuthenticated" />
		<form-login login-page="/login.html" authentication-failure-url="/login.html?login_error=1" />
			
		<!-- <x509 user-service-ref="customerUserDetailsService" subject-principal-regex="CN=(.*?),"/> -->

		<logout invalidate-session="true" logout-success-url="/index.jsp" />
		
		<custom-filter ref="requestHeaderFilter" before="FORM_LOGIN_FILTER" />
		<custom-filter ref="rememberMeFilter" after="FORM_LOGIN_FILTER" />
		<!--<custom-filter ref="custumSessionManagerFilter" before="SESSION_MANAGEMENT_FILTER" />-->
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<custom-filter before="LOGOUT_FILTER" ref="rememberMeLogoutFilter" />
		
		<session-management session-authentication-strategy-ref="defaultConcurrentSessionController" />
		
		<!--<session-management session-fixation-protection="migrateSession" invalid-session-url="/login.html">
			<concurrency-control max-sessions="1"
				expired-url="/login.html?login_error=1" error-if-maximum-exceeded="true" />
		</session-management>
		-->
		
		<port-mappings> 
			<port-mapping http="8080" https="8443" />
		</port-mappings>
		
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="usuarioContaRequestAuthenticationProvider" />
		<!-- X509 -->
		<!-- <authentication-provider ref="preauthAuthenticationProvider"/> -->
		<!-- REMEMBER ME -->
		<authentication-provider ref="rememberMeAuthenticationProvider"/>
	</authentication-manager>
	
	
	<!-- REMEMBER ME LOGOUT FILTER -->
	<beans:bean id="rememberMeLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter"
    	p:filterProcessesUrl="/j_security_rememberMe_logout">
    	<beans:constructor-arg value="/" />
    	<beans:constructor-arg>
	      	<beans:list>
	        	<beans:ref
	          		bean="rememberMeServices" />
	        	<beans:bean
	          		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
	      	</beans:list>
    	</beans:constructor-arg>
  	</beans:bean>
	
	<!-- CONCURRENT_SESSION_FILTER -->
	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/login.html?login_error=1" />
	</beans:bean>
	
	<!-- FORM_LOGIN_FILTER -->
	<beans:bean id="requestHeaderFilter" class="br.org.ged.direto.model.service.security.RequestHeaderProcessingFilter">
	 	<beans:property name="authenticationManager" ref="authenticationManager"/>
	 	<beans:property name="sessionAuthenticationStrategy" ref="defaultConcurrentSessionController" />
	 	<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
	 	<beans:property name="rememberMeServices" ref="rememberMeServices" />
	 </beans:bean>
	 
	 <!-- SESSION_MANAGEMENT_FILTER -->
	 <beans:bean id="custumSessionManagerFilter" class="org.springframework.security.web.session.SessionManagementFilter">
	 	<beans:constructor-arg name="securityContextRepository" ref="securityContextRepository" />
	 	<beans:property name="invalidSessionUrl" value="/login.html" />
	 	<beans:property name="sessionAuthenticationStrategy" ref="defaultConcurrentSessionController" />
	 </beans:bean>
	
	
	
	<!-- Define AccessDesisionManager as UnanimousBased -->
	<!--<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<beans:property name="decisionVoters">
			<beans:list>
			    <beans:ref bean="suspendVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />		
			</beans:list>
		</beans:property>
	</beans:bean>-->
	
	<!-- Define custom Voter -->
	<!--<beans:bean id="suspendVoter" class="br.org.ged.direto.model.service.security.SuspendRealTimeVoter" />-->
	
	<!-- JMX enable custom Voter -->
	<!--<beans:bean class="org.springframework.jmx.export.MBeanExporter">
		<beans:property name="beans">
			<beans:map>
				<beans:entry key="org.springframework.security.access:name=SuspendRealTimeVoter" value-ref="suspendVoter" />
			</beans:map>
		</beans:property>
	</beans:bean>-->
	
	
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
	
	<beans:bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.html?login_error=1" />
	</beans:bean>
	
	<beans:bean id="securityContextRepository"
		class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" >
		<beans:property name="allowSessionCreation" value="true" />
	</beans:bean>		
		
	<beans:bean id="defaultConcurrentSessionController"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<!--<beans:property name="exceptionIfMaximumExceeded" value="true" />
		--><beans:property name="maximumSessions" value="1" />
		<beans:property name="migrateSessionAttributes" value="true" />
	</beans:bean>

	

	
</beans:beans>
