<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.0.xsd
	">


	<global-method-security pre-post-annotations="enabled"></global-method-security>

	<http auto-config="true" use-expressions="true">

		<access-denied-handler error-page="/accessDenied.html" />

		<intercept-url pattern="/index.jsp" access="permitAll" />
		<intercept-url pattern="/login.html" access="permitAll" />
		<intercept-url pattern="/dwr/*" access="permitAll" />
		<intercept-url pattern="/dwr/interface/*" access="permitAll" />
		<intercept-url pattern="/imagens/*" access="permitAll" />
		<intercept-url pattern="/css/*" access="permitAll" />
		<!--
			<intercept-url pattern="/secure/**"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"
			requires-channel="https" />
		-->
		<intercept-url pattern="/*"
			access="hasAnyRole ('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN') and fullyAuthenticated" />

		<remember-me key="geddireto" token-validity-seconds="3600" />

		<logout invalidate-session="true" logout-success-url="/index.jsp" />
		<form-login login-page="/login.html"
			authentication-failure-url="/login.html?login_error=1" />

		<custom-filter ref="requestHeaderFilter" before="FORM_LOGIN_FILTER" />

		<session-management session-fixation-protection="none">
			<concurrency-control max-sessions="1"
				expired-url="/login.html?login_error=1" error-if-maximum-exceeded="true" />
		</session-management>
		
		<!--
			<port-mappings> <port-mapping http="8080" https="8443" />
			</port-mappings>
		--><!--<x509 subject-principal-regex="CN=(.*?)," />-->

	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="usuarioContaRequestAuthenticationProvider" />
		<authentication-provider user-service-ref="customerUserDetailsService">
			<password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>


	<!--
		<authentication-manager> <authentication-provider
		user-service-ref="customerUserDetailsService"> <password-encoder
		hash="md5" /> </authentication-provider> </authentication-manager>
	-->
	<!--
		<b:bean id="userDetailsService"
		class="br.org.ged.direto.model.service.security.HibernateUserDetailsService">
		<b:property name="hibernateTemplate" ref="hibernateTemplate" />
		</b:bean> <authentication-manager> <authentication-provider
		user-service-ref="userDetailsService"> <password-encoder hash="md5" />
		</authentication-provider> </authentication-manager>
	-->
	<!--
		<authentication-manager> <authentication-provider> <password-encoder
		hash="md5" /> <jdbc-user-service data-source-ref="dataSource"
		authorities-by-username-query="SELECT UsuLogin AS 'username',
		concat('ROLE_',upper(replace(UsuPapel, ' ', '_'))) AS 'authority' FROM
		usuario WHERE UsuLogin=?" users-by-username-query="SELECT UsuLogin AS
		'username', UsuSenha AS 'password', 'true' AS 'enabled' FROM usuario
		WHERE UsuLogin = ?"/> </authentication-provider>
		</authentication-manager>
	-->

</beans:beans>
